services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  gamepanel:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    restart: unless-stopped
    volumes:
      - .:/capp
    depends_on:
      - redis
    environment:
      - FLASK_ENV=production
    env_file:
      - .env
   
  frontend:
    build:
      context: ./my-react-flow-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./my-react-flow-app:/app
      - /app/node_modules
    depends_on:
      - gamepanel
    env_file:
      - .env

  tcp_server:
    build:
      context: ./tcp_server
      dockerfile: Dockerfile
    ports:
      - "65432:65432"
    depends_on:
      - redis
    env_file:
      - .env
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
